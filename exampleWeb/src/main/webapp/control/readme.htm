<p>
	&nbsp; &nbsp; <strong>Hasor</strong>&nbsp;是一款基于 <strong>Java</strong> 语言的应用程序开发框架，它的核心设计目标是提供一个简单、切必要的环境给开发者。开发者可以在此基础上，通过&nbsp;<strong>Hasor&nbsp;</strong>强有力的粘合机制，构建出更加完善的应用场景。同时&nbsp;<strong>Hasor&nbsp;</strong>的各种内置插件也会帮助开发者进行快速开发。
</p>
<h2>
	<b>设计思想</b>
</h2>
</p>
<p>
	&nbsp; &nbsp; <strong>Hasor</strong> 提倡开发者充分利用编程语言的优势进行三方整合和模块化设计。同时&nbsp;<strong>Hasor&nbsp;</strong>也主要是通过这种“<strong>微内核+插件</strong>”的方式丰富开发所需的所有功能。

</p>
<p>
	&nbsp; &nbsp;决定避开&nbsp;<strong>COC&nbsp;</strong>原则的原因是，<strong>COC&nbsp;</strong>虽然已约定的方式降低了整个框架的设计复杂度，但同时也最大限度的牺牲了框架的灵活性。缺少灵活性的框架在应用场景上会受到极大的制约。而&nbsp;<strong>Hasor&nbsp;</strong>的设计则更加面向底层，因此需要更多的灵活性。
</p>
<p>
	&nbsp; &nbsp; <strong>Hasor&nbsp;</strong>强大的灵活性表现在模块整合能力上，对于某一个领域开发方面&nbsp;<strong>Hasor&nbsp;</strong>依然强调并力推&nbsp;<strong>COC&nbsp;</strong>。小而美的核心，大而全的生态圈是&nbsp;<strong>Hasor&nbsp;</strong>的目标。
</p>
<h2>
	<b>架构</b>
</h2>
<p>
	<img src="http://static.oschina.net/uploads/space/2015/1127/185946_9TWV_1166271.png" alt="" data-bd-imgshare-binded="1">
</p>
<h2>
	<b>特性</b>
</h2>
<ul>
	<li>01. 支持IoC编程，灵活，多种注入方式可选</li>
	<li>02. 支持Aop编程，更精准、更强大</li>
	<li>03. ‘零’配置文件，所有框架配置全部内置</li>
	<li>04. ‘零’开发，解析自定义Xml配置文件</li>
	<li>05. 提供事件机制，通过事件方便业务流程的解耦合，使业务逻辑更佳清晰</li>
	<li>06. 提供完备的数据库操作接口，支持 Result -&gt; Object 映射</li>
	<li>07. 全面支持各种数据库事务传播属性，提供更佳精准的事务控制，包括针对代码片段的事务控制</li>
	<li>08. 支持多数据源下的事务控制，无需考虑多数据源下事务切换的问题</li>
	<li>09. 框架日志输出以slf4j-api为基准，可同时支持log4j、logback等多种主流日志框架</li>
</ul>