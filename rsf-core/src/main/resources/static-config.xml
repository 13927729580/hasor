<?xml version="1.0" encoding="UTF-8"?>
<config xmlns:root="http://project.hasor.net/hasor/schema/main" xmlns="http://project.hasor.net/hasor/schema/hasor-rsf">
	<!-- 框架配置，包扫描范围 -->
	<hasor>
		<loadPackages>net.hasor.rsf.*</loadPackages>
		<!-- RSF框架启动入口 -->
		<modules.module>net.hasor.rsf.bootstrap.RsfFrameworkModule</modules.module>
		
		<!-- RSF框架环境变量 -->
		<environmentVar>
			<!-- 应用程序代码或应用名称 -->
			<RSF_APP_CODE>anonymous</RSF_APP_CODE>
			<!-- 连接注册中心需要的授权码 -->
			<RSF_AUTH_CODE></RSF_AUTH_CODE>
		</environmentVar>
	</hasor>
	
	<!--
		Hasor-RSF ( 分布式服务框架 )

			- enable  : 是否启用RSF，默认情况不启用。启用了RSF之后它会开启相应的端口和线程。
			- address : RSF，无法在多个网卡上同时对外提供服务，因此您需要指定一个IP地址来告诉RSF工作在哪张网卡上。
							“local”和“localhost”的区别，local指的是，本地默认网卡的IP地址。“localhost”对应的IP地址是“127.0.0.1”
							如果您的部署环境有多张网卡，那么可以通过指定ip地址，来告诉RSF具体工作的网卡地址。
			- port    : RSF对外提供服务的监听端口号。
	-->
	<hasor.rsfConfig enable="false" address="local" port="2180">
		<!-- 所属单元名称，单元是用来给应用部署划分虚拟机房的。RSF通过单元可以有效控制跨机房调用，从而提升远程调用效率。-->
		<unitName>default</unitName>
		
		<!--
			RSF管理控制台(Telnet)
				- telnet  	  : 监听端口号。
				- inBound 	  : 可以使用RSF管理控制台的IP地址列表，默认是“127.0.0.1”。
									默认情况下您必须登录到应用服务器上，才能够访问RSF管理控制台。
				提示：RSF在启动的时，如果管理控制台的端口被占用，是不会影响到整个RSF启动进程。
		-->
		<console port="2181" inBound="127.0.0.1" />

		<!--注册中心，用于更新服务列表的配置服务器 -->
		<centerServers timeout="6000" heartbeatTime="15000" automaticOnline="true">
			<!-- <server>rsf://127.0.0.1:2180</server> -->
		</centerServers>

		<!--用于设置默认情况下RSF服务的一些基本信息。
				version = 在未指定注册服务的版本信息时使用的版本号。
				group   = 在未指定注册服务的分组信息时使用的分组名称。
				timeout = 在未指定注册服务的超时时间情况下 6000 毫秒超时。
		 -->
		<defaultServiceValue version="1.0.0" group="RSF" timeout="6000" />

		<!--通用配置
				defaultTimeout  = 客户端RPC发起请求超时时间
				maximumRequest  = 最大允许的并发请求数
				sendLimitPolicy = 并发调用请求限制策略，当并发调用达到限制值后的策略（Reject 抛出异常，WaitSecond 等待1秒重试）
				connectTimeout  = 客户端发起一个连接到完成RSF协议握手所允许的最大耗时（单位毫秒）。
		-->
		<client defaultTimeout="6000" maximumRequest="200" sendLimitPolicy="Reject" connectTimeout="3000" />

		<!--处理队列配置（用于配置ExecutesManager）
				maxSize     = 处理任务队列的最小大小，作为服务端当队列满了之后所有新进来的请求都会被回应 ChooseOther。
				minPoolSize = the number of threads to keep in the pool, even if they are idle, unless allowCoreThreadTimeOut is set.
				maxPoolSize = the maximum number of threads to allow in the pool. keepAliveTime(SECONDS) when the number of threads is greater than the core, 
							  this is the maximum time that excess idle threads will wait for new tasks before terminating.
		-->
		<queue maxSize="4096" minPoolSize="1" maxPoolSize="4" keepAliveTime="300" />

		<!--网络数据包线程配置
				workerThread ＝ 处理网络IO数据包的线程数。
				listenThread ＝ 处理网络监听请求的线程数。
		-->
		<network workerThread="8" listenThread="1" />

		<!-- 作为服务端向客户端响应时携带的选项（demo） -->
		<serverOptionSet>
			<option key="identity">Response</option>
		</serverOptionSet>

		<!-- 作为客户端向服务端发送调用请求时携带的选项（demo） -->
		<clientOptionSet>
			<option key="identity">Request</option>
		</clientOptionSet>

		<!-- 序列器（在修改序列化方式时，需要确保远程和本地都支持） -->
		<serializeType default="Hessian">
			<!-- JSON-格式序列化 -->
			<serialize name="Json">net.hasor.rsf.serialize.coder.JsonSerializeCoder</serialize>
			<!-- Java-原生序列化 -->
			<serialize name="Java">net.hasor.rsf.serialize.coder.JavaSerializeCoder</serialize>
			<!-- Hessian-格式序列化 -->
			<serialize name="Hessian">net.hasor.rsf.serialize.coder.HessianSerializeCoder</serialize>
		</serializeType>

		<!-- 默认QoS流控规则,该配置仅当没有配置任何QoS规则时才启用 -->
		<defaultSpeedFlowControl>
			<action>service</action>    <!-- 速率控制方式：每服务、每方法、每地址 -->
			<rate>2000</rate>           <!-- 稳态速率 -->
			<peak>5000</peak>           <!-- 峰值速率 -->
			<timeWindow>10</timeWindow> <!-- 时间窗口 -->
		</defaultSpeedFlowControl>

		<!-- 流控 & 路由 -->
		<route>
			<flowcontrol>
				<!-- 随机选址 -->
				<random>net.hasor.rsf.address.route.flowcontrol.random.RandomFlowControl</random>
				<!-- QoS速率 -->
				<speed>net.hasor.rsf.address.route.flowcontrol.speed.SpeedFlowControl</speed>
				<!-- 单元化地址本计算 -->
				<unit>net.hasor.rsf.address.route.flowcontrol.unit.UnitFlowControl</unit>
			</flowcontrol>
			<!-- 参数级路由计算，参数key生成器 -->
			<argsKey>net.hasor.rsf.address.route.rule.DefaultArgsKey</argsKey>
		</route>

		<!-- 地址本 -->
		<addressPool>
			<!-- 启用磁盘地址本缓存，在refreshCacheTime期间每隔1小时自动写入一次。（被回收的服务不享受此待遇） -->
			<localDiskCache>true</localDiskCache>
			<!-- 自动刷新addressPool地址本缓存的时间，默认6分钟。 -->
			<refreshCacheTime>360000</refreshCacheTime>
			<!-- (失效地址重试机制)当地址失效之后要经过多长时间才能被重新列入备选地址。 -时间间隔为(毫秒) 12分钟。 -->
			<invalidWaitTime>720000</invalidWaitTime>
		</addressPool>
	</hasor.rsfConfig>
</config>